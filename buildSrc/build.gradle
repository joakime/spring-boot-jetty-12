plugins {
	id 'java-gradle-plugin'
	id 'io.spring.javaformat' version '0.0.15'
	id 'checkstyle'
}

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven { url 'https://repo.spring.io/release' }
}

dependencies {
	checkstyle 'io.spring.javaformat:spring-javaformat-checkstyle:0.0.15'
	implementation 'org.apache.maven:maven-embedder:3.6.2'
	implementation 'org.asciidoctor:asciidoctor-gradle-jvm:2.3.0'
	implementation 'org.springframework:spring-core:5.2.0.RELEASE'
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.15'
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.assertj:assertj-core:3.11.1'
}

checkstyle {
 	def archive = configurations.checkstyle.filter { it.name.startsWith('spring-javaformat-checkstyle')}
	config = resources.text.fromArchiveEntry(archive, 'io/spring/javaformat/checkstyle/checkstyle.xml')
	toolVersion = 8.11
}

gradlePlugin {
	plugins {
		autoConfigurationPlugin {
			id = "org.springframework.boot.auto-configuration"
			implementationClass = "org.springframework.boot.build.autoconfigure.AutoConfigurationPlugin"
		}
		bomPlugin {
			id = "org.springframework.boot.bom"
			implementationClass = "org.springframework.boot.build.bom.BomPlugin"
		}
		configurationPropertiesPlugin {
			id = "org.springframework.boot.configuration-properties"
			implementationClass = "org.springframework.boot.build.context.properties.ConfigurationPropertiesPlugin"
		}
		conventionsPlugin {
			id = "org.springframework.boot.conventions"
			implementationClass = "org.springframework.boot.build.ConventionsPlugin"
		}
		mavenPluginPlugin {
			id = "org.springframework.boot.maven-plugin"
			implementationClass = "org.springframework.boot.build.mavenplugin.MavenPluginPlugin"
		}
		optionalDependenciesPlugin {
			id = "org.springframework.boot.optional-dependencies"
			implementationClass = "org.springframework.boot.build.optional.OptionalDependenciesPlugin"
		}
		starterPlugin {
			id = "org.springframework.boot.starter"
			implementationClass = "org.springframework.boot.build.starters.StarterPlugin"
		}
		internalPublishPlugin {
			id = "org.springframework.boot.internal-publish"
			implementationClass = "org.springframework.boot.build.maven.InternalPublishPlugin"
		}
	}
}
