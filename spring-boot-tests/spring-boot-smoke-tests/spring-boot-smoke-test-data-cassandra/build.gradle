buildscript {
	dependencies {
		classpath 'org.springframework:spring-core:5.2.2.RELEASE'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot.conventions'
}

description = 'Spring Boot Data Cassandra smoke test'

dependencies {
	implementation project(':spring-boot-project:spring-boot-starters:spring-boot-starter-data-cassandra')

	testImplementation project(':spring-boot-project:spring-boot-starters:spring-boot-starter-test')
	testImplementation('org.cassandraunit:cassandra-unit-spring:3.5.0.1') {
		exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
	}
}

test {
	CommandLineArgumentProvider provider = {
		def ports = org.springframework.util.SocketUtils.findAvailableTcpPorts(2)
		[
			"-Dspring.data.cassandra.port=${ports[0]}",
			"-Dcassandra.native_transport_port=${ports[0]}",
			"-Dcassandra.port.storage=${ports[1]}"
		]
	}
	jvmArgumentProviders.add provider
	enabled = !JavaVersion.current().java9Compatible
}