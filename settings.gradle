plugins {
    id 'com.gradle.enterprise' version '3.1'
}

gradleEnterprise {
	buildScan {
		captureTaskInputFiles = true
		obfuscation {
			ipAddresses { addresses -> addresses.collect { address -> '0.0.0.0'} }
		}
		publishAlwaysIf(System.getenv('GRADLE_ENTERPRISE_URL') != null)
		server = 'https://ge.spring.io'
	}
}

rootProject.name='spring-boot-build'

include 'spring-boot-project:spring-boot-dependencies'
include 'spring-boot-project:spring-boot-parent'
include 'spring-boot-project:spring-boot-tools:spring-boot-antlib'
include 'spring-boot-project:spring-boot-tools:spring-boot-autoconfigure-processor'
include 'spring-boot-project:spring-boot-tools:spring-boot-configuration-metadata'
include 'spring-boot-project:spring-boot-tools:spring-boot-configuration-processor'
include 'spring-boot-project:spring-boot-tools:spring-boot-gradle-plugin'
include 'spring-boot-project:spring-boot-tools:spring-boot-loader'
include 'spring-boot-project:spring-boot-tools:spring-boot-loader-tools'
include 'spring-boot-project:spring-boot-tools:spring-boot-maven-plugin'
include 'spring-boot-project:spring-boot-tools:spring-boot-test-support'
include 'spring-boot-project:spring-boot'
include 'spring-boot-project:spring-boot-autoconfigure'
include 'spring-boot-project:spring-boot-actuator'
include 'spring-boot-project:spring-boot-actuator-autoconfigure'
include 'spring-boot-project:spring-boot-cli'
include 'spring-boot-project:spring-boot-devtools'
include 'spring-boot-project:spring-boot-docs'
include 'spring-boot-project:spring-boot-properties-migrator'
include 'spring-boot-project:spring-boot-test'
include 'spring-boot-project:spring-boot-test-autoconfigure'
include 'spring-boot-tests:spring-boot-integration-tests:spring-boot-configuration-processor-tests'
include 'spring-boot-tests:spring-boot-integration-tests:spring-boot-launch-script-tests'
include 'spring-boot-tests:spring-boot-integration-tests:spring-boot-server-tests'

new File("$rootDir/spring-boot-project/spring-boot-starters").eachFileMatch(groovy.io.FileType.DIRECTORIES, ~/spring-boot-starter.*/) {
	include "spring-boot-project:spring-boot-starters:$it.name"
}

new File("$rootDir/spring-boot-tests/spring-boot-smoke-tests").eachFileMatch(groovy.io.FileType.DIRECTORIES, ~/spring-boot-smoke-test.*/) {
	include "spring-boot-tests:spring-boot-smoke-tests:$it.name"
}
