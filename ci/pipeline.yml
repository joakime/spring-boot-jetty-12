anchors:
  git-repo-resource-source: &git-repo-resource-source
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-ci-release-token))
    branch: ((branch))
  registry-image-resource-source: &registry-image-resource-source
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((milestone))
  gradle-enterprise-task-params: &gradle-enterprise-task-params
    GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
    GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
    GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
  docker-hub-task-params: &docker-hub-task-params
    DOCKER_HUB_USERNAME: ((docker-hub-username))
    DOCKER_HUB_PASSWORD: ((docker-hub-password))
  github-task-params: &github-task-params
    GITHUB_REPO: spring-boot
    GITHUB_ORGANIZATION: spring-projects
    GITHUB_PASSWORD: ((github-ci-release-token))
    GITHUB_USERNAME: ((github-username))
    MILESTONE: ((milestone))
  sontatype-task-params: &sonatype-task-params
    SONATYPE_USER_TOKEN: ((sonatype-username))
    SONATYPE_PASSWORD_TOKEN: ((sonatype-password))
    SONATYPE_URL: ((sonatype-url))
    SONATYPE_STAGING_PROFILE_ID: ((sonatype-staging-profile-id))
  artifactory-task-params: &artifactory-task-params
    ARTIFACTORY_SERVER: ((artifactory-server))
    ARTIFACTORY_USERNAME: ((artifactory-username))
    ARTIFACTORY_PASSWORD: ((artifactory-password))
  sdkman-task-params: &sdkman-task-params
    SDKMAN_CONSUMER_KEY: ((sdkman-consumer-key))
    SDKMAN_CONSUMER_TOKEN: ((sdkman-consumer-token))
  build-project-task-params: &build-project-task-params
    privileged: true
    timeout: ((task-timeout))
    file: git-repo/ci/tasks/build-project.yml
    tags:
      - carbonblack
    params:
      BRANCH: ((branch))
      DOCKER_HUB_MIRROR: ((docker-hub-mirror))
      <<: *gradle-enterprise-task-params
      <<: *docker-hub-task-params
  run-system-tests-task-params: &run-system-tests-task-params
    privileged: true
    timeout: ((task-timeout))
    file: git-repo/ci/tasks/run-system-tests.yml
    tags:
      - carbonblack
    params:
      BRANCH: ((branch))
      <<: *gradle-enterprise-task-params
      <<: *docker-hub-task-params
  docker-hub-mirror-vars: &docker-hub-mirror-vars
    docker-hub-mirror: ((docker-hub-mirror))
    docker-hub-mirror-username: ((docker-hub-mirror-username))
    docker-hub-mirror-password: ((docker-hub-mirror-password))
resource_types:
- name: artifactory-resource
  type: registry-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.17
resources:
- name: git-repo
  type: git
  icon: github
  source:
    <<: *git-repo-resource-source
- name: ci-image
  type: registry-image
  icon: docker
  source:
    <<: *registry-image-resource-source
    repository: ((docker-hub-organization))/spring-boot-ci
- name: paketo-builder-base-image
  type: registry-image
  icon: docker
  source:
    repository: paketobuildpacks/builder
    tag: base
- name: daily
  type: time
  icon: clock-outline
  source: { interval: "24h" }
jobs:
- name: build
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - get: daily
    trigger: true
  - do:
    - task: build-project
      image: ci-image
      <<: *build-project-task-params
- name: run-system-tests
  serial: true
  public: true
  plan:
    - get: ci-image
    - get: git-repo
    - get: paketo-builder-base-image
      trigger: true
    - get: daily
      trigger: true
    - do:
        - task: run-system-tests
          image: ci-image
          <<: *run-system-tests-task-params
