resource_types:
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.11-SNAPSHOT
- name: github-status-resource
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
resources:
- name: git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
- name: spring-boot-ci-image
  type: docker-image
  icon: docker
  source:
    repository: ((docker-hub-organization))/spring-boot-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: 2.3.x
- name: artifactory-repo
  type: artifactory-resource
  icon: package-variant
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))
jobs:
- name: build
  serial: true
  public: true
  plan:
  - get: spring-boot-ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: build-project
      privileged: true
      timeout: ((task-timeout))
      image: spring-boot-ci-image
      file: git-repo/ci/tasks/build-project.yml
      params:
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle-enterprise-cache-username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle-enterprise-cache-password))
    on_failure:
      do:
      - put: slack-alert
        params:
          text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
  - put: artifactory-repo
    params: &artifactory-params
      repo: libs-snapshot-local
      folder: distribution-repository
      build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
      disable_checksum_uploads: true
      threads: 8
      artifact_set:
      - include:
        - "/**/spring-boot-docs-*.zip"
        properties:
          "zip.type": "docs"
          "zip.deployed": "false"
    get_params:
      threads: 8
    on_failure:
      do:
      - put: slack-alert
        params:
          text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
  - put: slack-alert
    params:
      text: ":concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} was successful!>"
      silent: true
      icon_emoji: ":concourse:"
      username: concourse-ci
