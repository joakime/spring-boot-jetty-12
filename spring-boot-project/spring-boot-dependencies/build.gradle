plugins {
	id 'org.springframework.boot.bom'
	id 'org.springframework.boot.conventions'
	id 'org.springframework.boot.deployed'
}

description = 'Spring Boot Dependencies'

bom {
	library('activemq', '5.15.10') {
		group('org.apache.activemq') {
			modules = [
				'activemq-amqp',
				'activemq-blueprint',
				'activemq-broker',
				'activemq-camel',
				'activemq-client',
				'activemq-console' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'activemq-http',
				'activemq-jaas',
				'activemq-jdbc-store',
				'activemq-jms-pool',
				'activemq-kahadb-store',
				'activemq-karaf',
				'activemq-leveldb-store' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'activemq-log4j-appender',
				'activemq-mqtt',
				'activemq-openwire-generator',
				'activemq-openwire-legacy',
				'activemq-osgi',
				'activemq-partition',
				'activemq-pool',
				'activemq-ra',
				'activemq-run',
				'activemq-runtime-config',
				'activemq-shiro',
				'activemq-spring' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'activemq-stomp',
				'activemq-web'
			]
		}
	}
	library('antlr2', '2.7.7') {
		group('antlr') {
			modules = [
				'antlr'
			]
		}
	}
	library('appengine-sdk', '1.9.76') {
		group('com.google.appengine') {
			modules = [
				'appengine-api-1.0-sdk'
			]
		}
	}
	library('artemis', '2.10.1') {
		group('org.apache.activemq') {
			modules = [
				'artemis-amqp-protocol',
				'artemis-commons' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'artemis-core-client' {
					exclude group: 'org.apache.geronimo.specs', module: 'geronimo-json_1.0_spec'
				},
				'artemis-jms-client' {
					exclude group: 'org.apache.geronimo.specs', module: 'geronimo-json_1.0_spec'
				},
				'artemis-jms-server' {
					exclude group: 'org.apache.geronimo.specs', module: 'geronimo-json_1.0_spec'
				},
				'artemis-journal',
				'artemis-selector',
				'artemis-server' {
					exclude group: 'commons-logging', module: 'commons-logging'
					exclude group: 'org.apache.geronimo.specs', module: 'geronimo-json_1.0_spec'
				},
				'artemis-service-extensions'
			]
		}
	}
	library('aspectj', '1.9.4') {
		group('org.aspectj') {
			modules = [
				'aspectjrt',
				'aspectjtools',
				'aspectjweaver'
			]
		}
	}
	library('assertj', '3.14.0') {
		group('org.assertj') {
			modules = [
				'assertj-core'
			]
		}
	}
	library('atomikos', '4.0.6') {
		group('com.atomikos') {
			modules = [
				'transactions-jdbc',
				'transactions-jms',
				'transactions-jta'
			]
		}
	}
	library('awaitility', '4.0.1') {
		group('org.awaitility') {
			modules = [
				'awaitility',
				'awaitility-groovy',
				'awaitility-kotlin',
				'awaitility-scala'
			]
		}
	}
	library('bitronix', '2.1.4') {
		group('org.codehaus.btm') {
			modules = [
				'btm'
			]
		}
	}
	library('build-helper-maven-plugin', '3.0.0') {
		group('org.codehaus.mojo') {
			plugins = [
				'build-helper-maven-plugin'
			]
		}
	}
	library('byte-buddy', '1.10.2') {
		group('net.bytebuddy') {
			modules = [
				'byte-buddy',
				'byte-buddy-agent'
			]
		}
	}
	library('caffeine', '2.8.0') {
		group('com.github.ben-manes.caffeine') {
			modules = [
				'caffeine',
				'guava',
				'jcache',
				'simulator'
			]
		}
	}
	library('cassandra-driver', '3.7.2') {
		group('com.datastax.cassandra') {
			modules = [
				'cassandra-driver-core',
				'cassandra-driver-mapping'
			]
		}
	}
	library('classmate', '1.5.1') {
		group('com.fasterxml') {
			modules = [
				'classmate'
			]
		}
	}
	library('commons-codec', '1.13') {
		group('commons-codec') {
			modules = [
				'commons-codec'
			]
		}
	}
	library('commons-dbcp2', '2.7.0') {
		group('org.apache.commons') {
			modules = [
				'commons-dbcp2' {
					exclude group: 'commons-logging', module: 'commons-logging'
				}
			]
		}
	}
	library('commons-lang3', '3.9') {
		group('org.apache.commons') {
			modules = [
				'commons-lang3'
			]
		}
	}
	library('commons-pool', '1.6') {
		group('commons-pool') {
			modules = [
				'commons-pool'
			]
		}
	}
	library('commons-pool2', '2.7.0') {
		group('org.apache.commons') {
			modules = [
				'commons-pool2'
			]
		}
	}
	library('couchbase-cache-client', '2.1.0') {
		group('com.couchbase.client') {
			modules = [
				'couchbase-spring-cache'
			]
		}
	}
	library('couchbase-client', '2.7.9') {
		group('com.couchbase.client') {
			modules = [
				'java-client'
			]
		}
	}
	library('db2-jdbc', '11.5.0.0') {
		group('com.ibm.db2') {
			modules = [
				'jcc'
			]
		}
	}
	library('dependency-management-plugin', '1.0.8.RELEASE') {
		group('io.spring.gradle') {
			modules = [
				'dependency-management-plugin'
			]
		}
	}
	library('derby', '10.14.2.0') {
		group('org.apache.derby') {
			modules = [
				'derby',
				'derbyclient'
			]
		}
	}
	library('dropwizard-metrics', '4.1.1') {
		group('io.dropwizard.metrics') {
			modules = [
				'metrics-annotation',
				'metrics-core',
				'metrics-ehcache',
				'metrics-graphite',
				'metrics-healthchecks',
				'metrics-httpasyncclient',
				'metrics-jdbi',
				'metrics-jersey2',
				'metrics-jetty9',
				'metrics-jmx',
				'metrics-json',
				'metrics-jvm',
				'metrics-log4j2',
				'metrics-logback',
				'metrics-servlet',
				'metrics-servlets'
			]
		}
	}
	library('ehcache', '2.10.6') {
		group('net.sf.ehcache') {
			modules = [
				'ehcache'
			]
		}
	}
	library('ehcache3', '3.8.1') {
		group('org.ehcache') {
			modules = [
				'ehcache',
				'ehcache-clustered',
				'ehcache-transactions'
			]
		}
	}
	library('elasticsearch', '6.8.4') {
		group('org.elasticsearch') {
			modules = [
				'elasticsearch'
			]
		}
		group('org.elasticsearch.client') {
			modules = [
				'transport',
				'elasticsearch-rest-client' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'elasticsearch-rest-high-level-client'
			]
		}
		group('org.elasticsearch.distribution.integ-test-zip') {
			modules = [
				'elasticsearch'
			]
		}
		group('org.elasticsearch.plugin') {
			modules = [
				'transport-netty4-client'
			]
		}
	}
	library('embedded-mongo', '2.2.0') {
		group('de.flapdoodle.embed') {
			modules = [
				'de.flapdoodle.embed.mongo'
			]
		}
	}
	library('exec-maven-plugin', '1.6.0') {
		group('org.codehaus.mojo') {
			plugins = [
				'exec-maven-plugin'
			]
		}
	}
	library('flatten-maven-plugin', '1.1.0') {
		group('org.codehaus.mojo') {
			plugins = [
				'flatten-maven-plugin'
			]
		}
	}
	library('flyway', '6.0.8') {
		group('org.flywaydb') {
			modules = [
				'flyway-core'
			]
			plugins = [
				'flyway-maven-plugin'
			]
		}
	}
	library('freemarker', '2.3.29') {
		group('org.freemarker') {
			modules = [
				'freemarker'
			]
		}
	}
	library('git-commit-id-plugin', '3.0.1') {
		group('pl.project13.maven') {
			plugins = [
				'git-commit-id-plugin'
			]
		}
	}
	library('glassfish-el', '3.0.3') {
		group('org.glassfish') {
			modules = [
				'jakarta.el'
			]
		}
	}
	library('Glassfish JAXB', '2.3.2') {
		group('org.glassfish.jaxb') {
			modules = [
				'codemodel',
				'codemodel-annotation-compiler',
				'jaxb-jxc',
				'jaxb-runtime',
				'jaxb-xjc',
				'txw2',
				'txwc2',
				'xsom'
			]
		}
	}
	library('groovy', '2.5.8') {
		group('org.codehaus.groovy') {
			modules = [
				'groovy',
				'groovy-ant',
				'groovy-backports-compat23',
				'groovy-bsf',
				'groovy-cli-commons',
				'groovy-cli-picocli',
				'groovy-console',
				'groovy-datetime',
				'groovy-dateutil',
				'groovy-docgenerator',
				'groovy-groovydoc',
				'groovy-groovysh',
				'groovy-jaxb',
				'groovy-jmx',
				'groovy-json',
				'groovy-json-direct',
				'groovy-jsr223',
				'groovy-macro',
				'groovy-nio',
				'groovy-servlet',
				'groovy-sql',
				'groovy-swing',
				'groovy-templates',
				'groovy-test',
				'groovy-test-junit5',
				'groovy-testng',
				'groovy-xml'
			]
		}
	}
	library('gson', '2.8.6') {
		group('com.google.code.gson') {
			modules = [
				'gson'
			]
		}
	}
	library('h2', '1.4.200') {
		group('com.h2database') {
			modules = [
				'h2'
			]
		}
	}
	library('hamcrest', '2.2') {
		group('org.hamcrest') {
			modules = [
				'hamcrest',
				'hamcrest-core',
				'hamcrest-library'
			]
		}
	}
	library('hazelcast-hibernate5', '1.3.2') {
		group('com.hazelcast') {
			modules = [
				'hazelcast-hibernate52',
				'hazelcast-hibernate53'
			]
		}
	}
	library('hazelcast', '3.12.4') {
		group('com.hazelcast') {
			modules = [
				'hazelcast',
				'hazelcast-client',
				'hazelcast-spring'
			]
		}
	}
	library('hibernate-validator', '6.1.0.Final') {
		group('org.hibernate.validator') {
			modules = [
				'hibernate-validator',
				'hibernate-validator-annotation-processor'
			]
		}
	}
	library('hibernate', '5.4.8.Final') {
		group('org.hibernate') {
			modules = [
				'hibernate-c3p0',
				'hibernate-core',
				'hibernate-ehcache',
				'hibernate-entitymanager',
				'hibernate-envers',
				'hibernate-hikaricp',
				'hibernate-java8',
				'hibernate-jcache',
				'hibernate-jpamodelgen',
				'hibernate-proxool',
				'hibernate-spatial',
				'hibernate-testing',
				'hibernate-vibur'
			]
		}
	}
	library('hikaricp', '3.4.1') {
		group('com.zaxxer') {
			modules = [
				'HikariCP'
			]
		}
	}
	library('hsqldb', '2.5.0') {
		group('org.hsqldb') {
			modules = [
				'hsqldb'
			]
		}
	}
	library('htmlunit', '2.36.0') {
		group('net.sourceforge.htmlunit') {
			modules = [
				'htmlunit' {
					exclude group: 'commons-logging', module: 'commons-logging'
				}
			]
		}
	}
	library('httpasyncclient', '4.1.4') {
		group('org.apache.httpcomponents') {
			modules = [
				'httpasyncclient' {
					exclude group: 'commons-logging', module: 'commons-logging'
				}
			]
		}
	}
	library('httpclient', '4.5.10') {
		group('org.apache.httpcomponents') {
			modules = [
				'fluent-hc',
				'httpclient' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'httpclient-cache',
				'httpclient-osgi',
				'httpclient-win',
				'httpmime'
			]
		}
	}
	library('httpcore', '4.4.12') {
		group('org.apache.httpcomponents') {
			modules = [
				'httpcore',
				'httpcore-nio'
			]
		}
	}
	library('infinispan', '9.4.16.Final') {
		group('org.infinispan') {
			modules = [
				'infinispan-cachestore-jdbc',
				'infinispan-cachestore-jpa',
				'infinispan-cachestore-leveldb',
				'infinispan-cachestore-remote',
				'infinispan-cachestore-rest',
				'infinispan-cachestore-rocksdb',
				'infinispan-cdi-common',
				'infinispan-cdi-embedded',
				'infinispan-cdi-remote',
				'infinispan-client-hotrod',
				'infinispan-cloud',
				'infinispan-clustered-counter',
				'infinispan-clustered-lock',
				'infinispan-commons',
				'infinispan-core',
				'infinispan-directory-provider',
				'infinispan-hibernate-cache-v53',
				'infinispan-jcache',
				'infinispan-jcache-commons',
				'infinispan-jcache-remote',
				'infinispan-lucene-directory',
				'infinispan-objectfilter',
				'infinispan-osgi',
				'infinispan-persistence-cli',
				'infinispan-persistence-soft-index',
				'infinispan-query',
				'infinispan-query-dsl',
				'infinispan-remote-query-client',
				'infinispan-remote-query-server',
				'infinispan-scripting',
				'infinispan-server-core',
				'infinispan-server-hotrod',
				'infinispan-server-memcached',
				'infinispan-server-router',
				'infinispan-spring4-common',
				'infinispan-spring4-embedded',
				'infinispan-spring4-remote',
				'infinispan-spring5-common',
				'infinispan-spring5-embedded',
				'infinispan-spring5-remote',
				'infinispan-tasks',
				'infinispan-tasks-api',
				'infinispan-tools',
				'infinispan-tree'
			]
			plugins = [
				'infinispan-protocol-parser-generator-maven-plugin'
			]
		}
	}
	library('influxdb-java', '2.16') {
		group('org.influxdb') {
			modules = [
				'influxdb-java'
			]
		}
	}
	library('jackson-bom', '2.10.0') {
		group('com.fasterxml.jackson') {
			imports = [
				'jackson-bom'
			]
		}
	}
	library('jakarta-activation', '1.2.1') {
		group('com.sun.activation') {
			modules = [
				'jakarta.activation'
			]
		}
		group('jakarta.activation') {
			modules = [
				'jakarta.activation-api'
			]
		}
	}
	library('jakarta-annotation', '1.3.5') {
		group('jakarta.annotation') {
			modules = [
				'jakarta.annotation-api'
			]
		}
	}
	library('jakarta-jms', '2.0.3') {
		group('jakarta.jms') {
			modules = [
				'jakarta.jms-api'
			]
		}
	}
	library('jakarta-json-bind', '1.0.2') {
		group('jakarta.json.bind') {
			modules = [
				'jakarta.json.bind-api'
			]
		}
	}
	library('jakarta-json', '1.1.6') {
		group('jakarta.json') {
			modules = [
				'jakarta.json-api'
			]
		}
	}
	library('jakarta-mail', '1.6.4') {
		group('jakarta.mail') {
			modules = [
				'jakarta.mail-api'
			]
		}
	}
	library('jakarta-persistence', '2.2.3') {
		group('jakarta.persistence') {
			modules = [
				'jakarta.persistence-api'
			]
		}
	}
	library('jakarta-servlet-jsp-jstl', '1.2.7') {
		group('jakarta.servlet.jsp.jstl') {
			modules = [
				'jakarta.servlet.jsp.jstl-api'
			]
		}
	}
	library('jakarta-servlet', '4.0.3') {
		group('jakarta.servlet') {
			modules = [
				'jakarta.servlet-api'
			]
		}
	}
	library('jakarta-transaction', '1.3.3') {
		group('jakarta.transaction') {
			modules = [
				'jakarta.transaction-api'
			]
		}
	}
	library('jakarta-validation', '2.0.1') {
		group('jakarta.validation') {
			modules = [
				'jakarta.validation-api'
			]
		}
	}
	library('jakarta-websocket', '1.1.2') {
		group('jakarta.websocket') {
			modules = [
				'jakarta.websocket-api'
			]
		}
	}
	library('jakarta-ws-rs', '2.1.6') {
		group('jakarta.ws.rs') {
			modules = [
				'jakarta.ws.rs-api'
			]
		}
	}
	library('jakarta-xml-bind', '2.3.2') {
		group('jakarta.xml.bind') {
			modules = [
				'jakarta.xml.bind-api'
			]
		}
	}
	library('jakarta-xml-ws', '2.3.2') {
		group('jakarta.xml.ws') {
			modules = [
				'jakarta.xml.ws-api'
			]
		}
	}
	library('janino', '3.1.0') {
		group('org.codehaus.janino') {
			modules = [
				'commons-compiler',
				'commons-compiler-jdk',
				'janino'
			]
		}
	}
	library('javax-activation', '1.2.0') {
		group('javax.activation') {
			modules = [
				'javax.activation-api'
			]
		}
	}
	library('javax-annotation', '1.3.2') {
		group('javax.annotation') {
			modules = [
				'javax.annotation-api'
			]
		}
	}
	library('javax-cache', '1.1.1') {
		group('javax.cache') {
			modules = [
				'cache-api'
			]
		}
	}
	library('javax-jaxb', '2.3.1') {
		group('javax.xml.bind') {
			modules = [
				'jaxb-api'
			]
		}
	}
	library('javax-jaxws', '2.3.1') {
		group('javax.xml.ws') {
			modules = [
				'jaxws-api'
			]
		}
	}
	library('javax-jms', '2.0.1') {
		group('javax.jms') {
			modules = [
				'javax.jms-api'
			]
		}
	}
	library('javax-json', '1.1.4') {
		group('javax.json') {
			modules = [
				'javax.json-api'
			]
		}
	}
	library('javax-jsonb', '1.0') {
		group('javax.json.bind') {
			modules = [
				'javax.json.bind-api'
			]
		}
	}
	library('javax-mail', '1.6.2') {
		group('javax.mail') {
			modules = [
				'javax.mail-api'
			]
		}
	}
	library('javax-money', '1.0.3') {
		group('javax.money') {
			modules = [
				'money-api'
			]
		}
	}
	library('javax-persistence', '2.2') {
		group('javax.persistence') {
			modules = [
				'javax.persistence-api'
			]
		}
	}
	library('javax-transaction', '1.3') {
		group('javax.transaction') {
			modules = [
				'javax.transaction-api'
			]
		}
	}
	library('javax-validation', '2.0.1.Final') {
		group('javax.validation') {
			modules = [
				'validation-api'
			]
		}
	}
	library('javax-websocket', '1.1') {
		group('javax.websocket') {
			modules = [
				'javax.websocket-api'
			]
		}
	}
	library('jaxen', '1.2.0') {
		group('jaxen') {
			modules = [
				'jaxen'
			]
		}
	}
	library('jaybird', '3.0.6') {
		group('org.firebirdsql.jdbc') {
			modules = [
				'jaybird-jdk17',
				'jaybird-jdk18'
			]
		}
	}
	library('jboss-logging', '3.4.1.Final') {
		group('org.jboss.logging') {
			modules = [
				'jboss-logging'
			]
		}
	}
	library('jboss-transaction-spi', '7.6.0.Final') {
		group('org.jboss') {
			modules = [
				'jboss-transaction-spi'
			]
		}
	}
	library('jdom2', '2.0.6') {
		group('org.jdom') {
			modules = [
				'jdom2'
			]
		}
	}
	library('jedis', '3.1.0') {
		group('redis.clients') {
			modules = [
				'jedis'
			]
		}
	}
	library('jersey', '2.29.1') {
		group('org.glassfish.jersey') {
			imports = [
				'jersey-bom'
			]
		}
	}
	library('jest', '6.3.1') {
		group('io.searchbox') {
			modules = [
				'jest'
			]
		}
	}
	library('jetty-el', '8.5.40') {
		group('org.mortbay.jasper') {
			modules = [
				'apache-el'
			]
		}
	}
	library('jetty-jsp', '2.2.0.v201112011158') {
		group('org.eclipse.jetty.orbit') {
			modules = [
				'javax.servlet.jsp'
			]
		}
	}
	library('jetty-reactive-httpclient', '1.0.3') {
		group('org.eclipse.jetty') {
			modules = [
				'jetty-reactive-httpclient'
			]
		}
	}
	library('jetty', '9.4.22.v20191022') {
		group('org.eclipse.jetty') {
			imports = [
				'jetty-bom'
			]
		}
	}
	library('jmustache', '1.15') {
		group('com.samskivert') {
			modules = [
				'jmustache'
			]
		}
	}
	library('jna', '4.5.2') {
		group('net.java.dev.jna') {
			modules = [
				'jna',
				'jna-platform'
			]
		}
	}
	library('joda-time', '2.10.5') {
		group('joda-time') {
			modules = [
				'joda-time'
			]
		}
	}
	library('johnzon', '1.2.1') {
		group('org.apache.johnzon') {
			modules = [
				'johnzon-core',
				'johnzon-jaxrs',
				'johnzon-jsonb',
				'johnzon-jsonb-extras',
				'johnzon-jsonschema',
				'johnzon-mapper',
				'johnzon-websocket'
			]
			plugins = [
				'johnzon-maven-plugin'
			]
		}
	}
	library('jolokia', '1.6.2') {
		group('org.jolokia') {
			modules = [
				'jolokia-core'
			]
		}
	}
	library('jooq', '3.12.3') {
		group('org.jooq') {
			modules = [
				'jooq',
				'jooq-meta',
				'jooq-codegen'
			]
			plugins = [
				'jooq-codegen-maven'
			]
		}
	}
	library('json-path', '2.4.0') {
		group('com.jayway.jsonpath') {
			modules = [
				'json-path',
				'json-path-assert'
			]
		}
	}
	library('jsonassert', '1.5.0') {
		group('org.skyscreamer') {
			modules = [
				'jsonassert'
			]
		}
	}
	library('jstl', '1.2') {
		group('javax.servlet') {
			modules = [
				'jstl'
			]
		}
	}
	library('jtds', '1.3.1') {
		group('net.sourceforge.jtds') {
			modules = [
				'jtds'
			]
		}
	}
	library('junit-jupiter', '5.5.2') {
		group('org.junit') {
			imports = [
				'junit-bom'
			]
		}
	}
	library('junit', '4.12') {
		group('junit') {
			modules = [
				'junit'
			]
		}
	}
	library('kafka', '2.3.1') {
		group('org.apache.kafka') {
			modules = [
				'connect-api',
				'connect-basic-auth-extension',
				'connect-file',
				'connect-json',
				'connect-runtime',
				'connect-transforms',
				'kafka-clients',
				'kafka-log4j-appender',
				'kafka-streams',
				'kafka-streams-scala_2.11',
				'kafka-streams-scala_2.12',
				'kafka-streams-test-utils',
				'kafka-tools',
				'kafka_2.11',
				'kafka_2.12'
			]
		}
	}
	library('kotlin-coroutines', '1.3.2') {
		group('org.jetbrains.kotlinx') {
			imports = [
				'kotlinx-coroutines-bom'
			]
		}
	}
	library('kotlin', '1.3.60') {
		group('org.jetbrains.kotlin') {
			imports = [
				'kotlin-bom'
			]
			plugins = [
				'kotlin-maven-plugin'
			]
		}
	}
	library('lettuce', '5.2.1.RELEASE') {
		group('io.lettuce') {
			modules = [
				'lettuce-core'
			]
		}
	}
	library('liquibase', '3.8.0') {
		group('org.liquibase') {
			modules = [
				'liquibase-core' {
					exclude group: 'ch.qos.logback', module: 'logback-classic'
				}
			]
		}
	}
	library('log4j2', '2.12.1') {
		group('org.apache.logging.log4j') {
			modules = [
				'log4j-to-slf4j'
			]
			imports = [
				'log4j-bom'
			]
		}
	}
	library('logback', '1.2.3') {
		group('ch.qos.logback') {
			modules = [
				'logback-access',
				'logback-classic',
				'logback-core'
			]
		}
	}
	library('lombok', '1.18.10') {
		group('org.projectlombok') {
			modules = [
				'lombok'
			]
		}
	}
	library('mariadb', '2.5.1') {
		group('org.mariadb.jdbc') {
			modules = [
				'mariadb-java-client'
			]
		}
	}
	library('maven-antrun-plugin', '1.8') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-antrun-plugin'
			]
		}
	}
	library('maven-assembly-plugin', '3.2.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-assembly-plugin'
			]
		}
	}
	library('maven-clean-plugin', '3.1.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-clean-plugin'
			]
		}
	}
	library('maven-compiler-plugin', '3.8.1') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-compiler-plugin'
			]
		}
	}
	library('maven-dependency-plugin', '3.1.1') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-dependency-plugin'
			]
		}
	}
	library('maven-deploy-plugin', '2.8.2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-deploy-plugin'
			]
		}
	}
	library('maven-enforcer-plugin', '3.0.0-M2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-enforcer-plugin'
			]
		}
	}
	library('maven-failsafe-plugin', '2.22.2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-failsafe-plugin'
			]
		}
	}
	library('maven-help-plugin', '3.2.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-help-plugin'
			]
		}
	}
	library('maven-install-plugin', '2.5.2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-install-plugin'
			]
		}
	}
	library('maven-invoker-plugin', '3.2.1') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-invoker-plugin'
			]
		}
	}
	library('maven-jar-plugin', '3.2.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-jar-plugin'
			]
		}
	}
	library('maven-javadoc-plugin', '3.1.1') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-javadoc-plugin'
			]
		}
	}
	library('maven-resources-plugin', '3.1.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-resources-plugin'
			]
		}
	}
	library('maven-shade-plugin', '3.2.1') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-shade-plugin'
			]
		}
	}
	library('maven-site-plugin', '3.8.2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-site-plugin'
			]
		}
	}
	library('maven-source-plugin', '3.2.0') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-source-plugin'
			]
		}
	}
	library('maven-surefire-plugin', '2.22.2') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-surefire-plugin'
			]
		}
	}
	library('maven-war-plugin', '3.2.3') {
		group('org.apache.maven.plugins') {
			plugins = [
				'maven-war-plugin'
			]
		}
	}
	library('micrometer', '1.3.1') {
		group('io.micrometer') {
			imports = [
				'micrometer-bom'
			]
		}
	}
	library('mimepull', '1.9.12') {
		group('org.jvnet.mimepull') {
			modules = [
				'mimepull'
			]
		}
	}
	library('mockito', '3.1.0') {
		group('org.mockito') {
			modules = [
				'mockito-core',
				'mockito-inline',
				'mockito-junit-jupiter'
			]
		}
	}
	library('mongo-driver-reactivestreams', '1.12.0') {
		group('org.mongodb') {
			modules = [
				'mongodb-driver-reactivestreams'
			]
		}
	}
	library('mongodb', '3.11.2') {
		group('org.mongodb') {
			modules = [
				'bson',
				'mongodb-driver',
				'mongodb-driver-async',
				'mongodb-driver-core',
				'mongo-java-driver'
			]
		}
	}
	library('mssql-jdbc', '7.4.1.jre8') {
		group('com.microsoft.sqlserver') {
			modules = [
				'mssql-jdbc'
			]
		}
	}
	library('mysql', '8.0.18') {
		group('mysql') {
			modules = [
				'mysql-connector-java' {
					exclude group: 'com.google.protobuf', module: 'protobuf-java'
				}
			]
		}
	}
	library('nekohtml', '1.9.22') {
		group('net.sourceforge.nekohtml') {
			modules = [
				'nekohtml'
			]
		}
	}
	library('neo4j-ogm', '3.2.2') {
		group('org.neo4j') {
			modules = [
				'neo4j-ogm-api',
				'neo4j-ogm-bolt-driver',
				'neo4j-ogm-bolt-native-types',
				'neo4j-ogm-core',
				'neo4j-ogm-embedded-driver',
				'neo4j-ogm-embedded-native-types',
				'neo4j-ogm-http-driver'
			]
		}
	}
	library('netty-tcnative', '2.0.26.Final') {
		group('io.netty') {
			modules = [
				'netty-tcnative-boringssl-static'
			]
		}
	}
	library('netty', '4.1.43.Final') {
		group('io.netty') {
			imports = [
				'netty-bom'
			]
		}
	}
	library('nio-multipart-parser', '1.1.0') {
		group('org.synchronoss.cloud') {
			modules = [
				'nio-multipart-parser'
			]
		}
	}
	library('ojdbc', '19.3.0.0') {
		group('com.oracle.ojdbc') {
			modules = [
				'dms',
				'ojdbc10',
				'ojdbc10_g',
				'ojdbc10dms',
				'ojdbc10dms_g',
				'ojdbc8',
				'ojdbc8_g',
				'ojdbc8dms',
				'ojdbc8dms_g',
				'ons',
				'oraclepki',
				'orai18n',
				'osdt_cert',
				'osdt_core',
				'simplefan',
				'ucp',
				'xdb',
				'xmlparserv2'
			]
		}
	}
	library('okhttp3', '3.14.4') {
		group('com.squareup.okhttp3') {
			modules = [
				'logging-interceptor',
				'mockwebserver',
				'okcurl',
				'okhttp',
				'okhttp-dnsoverhttps',
				'okhttp-sse',
				'okhttp-testing-support',
				'okhttp-tls',
				'okhttp-urlconnection'
			]
		}
	}
	library('pooled-jms', '1.1.0') {
		group('org.messaginghub') {
			modules = [
				'pooled-jms'
			]
		}
	}
	library('postgresql', '42.2.8') {
		group('org.postgresql') {
			modules = [
				'postgresql'
			]
		}
	}
	library('prometheus-pushgateway', '0.7.0') {
		group('io.prometheus') {
			modules = [
				'simpleclient_pushgateway'
			]
		}
	}
	library('quartz', '2.3.2') {
		group('org.quartz-scheduler') {
			modules = [
				'quartz' {
					exclude group: 'com.mchange', module: 'c3p0'
					exclude group: 'com.zaxxer', module: '*'
				},
				'quartz-jobs'
			]
		}
	}
	library('querydsl', '4.2.1') {
		group('com.querydsl') {
			modules = [
				'querydsl-apt',
				'querydsl-collections',
				'querydsl-core',
				'querydsl-jpa',
				'querydsl-mongodb' {
					exclude group: 'org.mongodb', module: 'mongo-java-driver'
				}
			]
		}
	}
	library('rabbit-amqp-client', '5.7.3') {
		group('com.rabbitmq') {
			modules = [
				'amqp-client'
			]
		}
	}
	library('reactive-streams', '1.0.3') {
		group('org.reactivestreams') {
			modules = [
				'reactive-streams'
			]
		}
	}
	library('reactor-bom', 'Dysprosium-BUILD-SNAPSHOT') {
		group('io.projectreactor') {
			imports = [
				'reactor-bom'
			]
		}
	}
	library('rest-assured', '3.3.0') {
		group('io.rest-assured') {
			modules = [
				'json-path',
				'json-schema-validator',
				'rest-assured',
				'scala-support',
				'spring-mock-mvc',
				'spring-web-test-client',
				'xml-path'
			]
		}
	}
	library('Spring Boot', '2.3.0.GRADLE-SNAPSHOT') {
		group('org.springframework.boot') {
			modules = [
				'spring-boot',
				'spring-boot-test',
				'spring-boot-test-autoconfigure',
				'spring-boot-actuator',
				'spring-boot-actuator-autoconfigure',
				'spring-boot-autoconfigure',
				'spring-boot-autoconfigure-processor',
				'spring-boot-configuration-metadata',
				'spring-boot-configuration-processor',
				'spring-boot-devtools',
				'spring-boot-loader',
				'spring-boot-loader-tools',
				'spring-boot-properties-migrator',
				'spring-boot-starter',
				'spring-boot-starter-activemq',
				'spring-boot-starter-actuator',
				'spring-boot-starter-amqp',
				'spring-boot-starter-aop',
				'spring-boot-starter-artemis',
				'spring-boot-starter-batch',
				'spring-boot-starter-cache',
				'spring-boot-starter-cloud-connectors',
				'spring-boot-starter-data-cassandra',
				'spring-boot-starter-data-cassandra-reactive',
				'spring-boot-starter-data-couchbase',
				'spring-boot-starter-data-couchbase-reactive',
				'spring-boot-starter-data-elasticsearch',
				'spring-boot-starter-data-jdbc',
				'spring-boot-starter-data-jpa',
				'spring-boot-starter-data-ldap',
				'spring-boot-starter-data-mongodb',
				'spring-boot-starter-data-mongodb-reactive',
				'spring-boot-starter-data-redis',
				'spring-boot-starter-data-redis-reactive',
				'spring-boot-starter-data-neo4j',
				'spring-boot-starter-data-rest',
				'spring-boot-starter-data-solr',
				'spring-boot-starter-freemarker',
				'spring-boot-starter-groovy-templates',
				'spring-boot-starter-hateoas',
				'spring-boot-starter-integration',
				'spring-boot-starter-jdbc',
				'spring-boot-starter-jersey',
				'spring-boot-starter-jetty',
				'spring-boot-starter-jooq',
				'spring-boot-starter-json',
				'spring-boot-starter-jta-atomikos',
				'spring-boot-starter-jta-bitronix',
				'spring-boot-starter-log4j2',
				'spring-boot-starter-logging',
				'spring-boot-starter-mail',
				'spring-boot-starter-mustache',
				'spring-boot-starter-oauth2-client',
				'spring-boot-starter-oauth2-resource-server',
				'spring-boot-starter-quartz',
				'spring-boot-starter-reactor-netty',
				'spring-boot-starter-rsocket',
				'spring-boot-starter-security',
				'spring-boot-starter-test',
				'spring-boot-starter-thymeleaf',
				'spring-boot-starter-tomcat',
				'spring-boot-starter-undertow',
				'spring-boot-starter-validation',
				'spring-boot-starter-web',
				'spring-boot-starter-webflux',
				'spring-boot-starter-websocket',
				'spring-boot-starter-web-services'
			]
			plugins = [
				'spring-boot-maven-plugin'
			]
		}
	}
	library('rsocket', '1.0.0-RC5') {
		group('io.rsocket') {
			imports = [
				'rsocket-bom'
			]
		}
	}
	library('rxjava-adapter', '1.2.1') {
		group('io.reactivex') {
			modules = [
				'rxjava-reactive-streams'
			]
		}
	}
	library('rxjava', '1.3.8') {
		group('io.reactivex') {
			modules = [
				'rxjava'
			]
		}
	}
	library('rxjava2', '2.2.14') {
		group('io.reactivex.rxjava2') {
			modules = [
				'rxjava'
			]
		}
	}
	library('saaj-impl', '1.5.1') {
		group('com.sun.xml.messaging.saaj') {
			modules = [
				'saaj-impl'
			]
		}
	}
	library('selenium-htmlunit', '2.36.0') {
		group('org.seleniumhq.selenium') {
			modules = [
				'htmlunit-driver'
			]
		}
	}
	library('selenium', '3.141.59') {
		group('org.seleniumhq.selenium') {
			modules = [
				'selenium-api',
				'selenium-chrome-driver',
				'selenium-edge-driver',
				'selenium-firefox-driver',
				'selenium-ie-driver',
				'selenium-java',
				'selenium-opera-driver',
				'selenium-remote-driver' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'selenium-safari-driver',
				'selenium-support' {
					exclude group: 'commons-logging', module: 'commons-logging'
				}
			]
		}
	}
	library('sendgrid', '4.4.1') {
		group('com.sendgrid') {
			modules = [
				'sendgrid-java'
			]
		}
	}
	library('servlet-api', '4.0.1') {
		group('javax.servlet') {
			modules = [
				'javax.servlet-api'
			]
		}
	}
	library('slf4j', '1.7.29') {
		group('org.slf4j') {
			modules = [
				'jcl-over-slf4j',
				'jul-to-slf4j',
				'log4j-over-slf4j',
				'slf4j-api',
				'slf4j-ext',
				'slf4j-jcl',
				'slf4j-jdk14',
				'slf4j-log4j12',
				'slf4j-nop',
				'slf4j-simple'
			]
		}
	}
	library('snakeyaml', '1.25') {
		group('org.yaml') {
			modules = [
				'snakeyaml'
			]
		}
	}
	library('solr', '8.2.0') {
		group('org.apache.solr') {
			modules = [
				'solr-analysis-extras',
				'solr-analytics',
				'solr-cell',
				'solr-clustering',
				'solr-core',
				'solr-dataimporthandler',
				'solr-dataimporthandler-extras',
				'solr-langid',
				'solr-ltr',
				'solr-solrj' {
					exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
				},
				'solr-test-framework',
				'solr-velocity'
			]
		}
	}
	library('spring-amqp', '2.2.1.RELEASE') {
		group('org.springframework.amqp') {
			modules = [
				'spring-amqp',
				'spring-rabbit',
				'spring-rabbit-junit',
				'spring-rabbit-test'
			]
		}
	}
	library('spring-batch', '4.2.0.RELEASE') {
		group('org.springframework.batch') {
			modules = [
				'spring-batch-core',
				'spring-batch-infrastructure',
				'spring-batch-integration',
				'spring-batch-test'
			]
		}
	}
	library('spring-cloud-connectors', '2.0.6.RELEASE') {
		group('org.springframework.cloud') {
			modules = [
				'spring-cloud-cloudfoundry-connector',
				'spring-cloud-connectors-core',
				'spring-cloud-heroku-connector',
				'spring-cloud-localconfig-connector',
				'spring-cloud-spring-service-connector'
			]
		}
	}
	library('spring-data-releasetrain', 'Moore-BUILD-SNAPSHOT') {
		group('org.springframework.data') {
			imports = [
				'spring-data-releasetrain'
			]
		}
	}
	library('spring-framework', '5.2.2.BUILD-SNAPSHOT') {
		group('org.springframework') {
			imports = [
				'spring-framework-bom'
			]
		}
	}
	library('spring-hateoas', '1.0.1.RELEASE') {
		group('org.springframework.hateoas') {
			modules = [
				'spring-hateoas'
			]
		}
	}
	library('spring-integration', '5.2.1.RELEASE') {
		group('org.springframework.integration') {
			modules = [
				'spring-integration-http' {
					exclude group: 'commons-logging', module: 'commons-logging'
					exclude group: 'commons-logging', module: 'commons-logging-api'
				}
			]
			imports = [
				'spring-integration-bom'
			]
		}
	}
	library('spring-kafka', '2.3.3.RELEASE') {
		group('org.springframework.kafka') {
			modules = [
				'spring-kafka',
				'spring-kafka-test'
			]
		}
	}
	library('spring-ldap', '2.3.2.RELEASE') {
		group('org.springframework.ldap') {
			modules = [
				'spring-ldap-core',
				'spring-ldap-core-tiger',
				'spring-ldap-ldif-batch',
				'spring-ldap-ldif-core',
				'spring-ldap-odm',
				'spring-ldap-test'
			]
		}
	}
	library('spring-restdocs', '2.0.4.RELEASE') {
		group('org.springframework.restdocs') {
			modules = [
				'spring-restdocs-asciidoctor',
				'spring-restdocs-core',
				'spring-restdocs-mockmvc',
				'spring-restdocs-restassured',
				'spring-restdocs-webtestclient'
			]
		}
	}
	library('spring-retry', '1.2.4.RELEASE') {
		group('org.springframework.retry') {
			modules = [
				'spring-retry'
			]
		}
	}
	library('spring-security', '5.2.1.RELEASE') {
		group('org.springframework.security') {
			imports = [
				'spring-security-bom'
			]
		}
	}
	library('spring-session-bom', 'Corn-RELEASE') {
		group('org.springframework.session') {
			imports = [
				'spring-session-bom'
			]
		}
	}
	library('spring-ws', '3.0.8.RELEASE') {
		group('org.springframework.ws') {
			modules = [
				'spring-ws-core' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'spring-ws-security' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'spring-ws-support' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'spring-ws-test' {
					exclude group: 'commons-logging', module: 'commons-logging'
				},
				'spring-xml'
			]
		}
	}
	library('sqlite-jdbc', '3.28.0') {
		group('org.xerial') {
			modules = [
				'sqlite-jdbc'
			]
		}
	}
	library('sun-mail', '1.6.4') {
		group('com.sun.mail') {
			modules = [
				'jakarta.mail'
			]
		}
	}
	library('thymeleaf-extras-data-attribute', '2.0.1') {
		group('com.github.mxab.thymeleaf.extras') {
			modules = [
				'thymeleaf-extras-data-attribute'
			]
		}
	}
	library('thymeleaf-extras-java8time', '3.0.4.RELEASE') {
		group('org.thymeleaf.extras') {
			modules = [
				'thymeleaf-extras-java8time'
			]
		}
	}
	library('thymeleaf-extras-springsecurity', '3.0.4.RELEASE') {
		group('org.thymeleaf.extras') {
			modules = [
				'thymeleaf-extras-springsecurity5'
			]
		}
	}
	library('thymeleaf-layout-dialect', '2.4.1') {
		group('nz.net.ultraq.thymeleaf') {
			modules = [
				'thymeleaf-layout-dialect'
			]
		}
	}
	library('thymeleaf', '3.0.11.RELEASE') {
		group('org.thymeleaf') {
			modules = [
				'thymeleaf',
				'thymeleaf-spring5'
			]
		}
	}
	library('tomcat', '9.0.27') {
		group('org.apache.tomcat') {
			modules = [
				'tomcat-annotations-api',
				'tomcat-jdbc',
				'tomcat-jsp-api'
			]
		}
		group('org.apache.tomcat.embed') {
			modules = [
				'tomcat-embed-core',
				'tomcat-embed-el',
				'tomcat-embed-jasper',
				'tomcat-embed-websocket'
			]
		}
	}
	library('unboundid-ldapsdk', '4.0.12') {
		group('com.unboundid') {
			modules = [
				'unboundid-ldapsdk'
			]
		}
	}
	library('undertow', '2.0.27.Final') {
		group('io.undertow') {
			modules = [
				'undertow-core',
				'undertow-servlet',
				'undertow-websockets-jsr'
			]
		}
	}
	library('versions-maven-plugin', '2.7') {
		group('org.codehaus.mojo') {
			plugins = [
				'versions-maven-plugin'
			]
		}
	}
	library('webjars-hal-browser', '3325375') {
		group('org.webjars') {
			modules = [
				'hal-browser'
			]
		}
	}
	library('webjars-locator-core', '0.42') {
		group('org.webjars') {
			modules = [
				'webjars-locator-core'
			]
		}
	}
	library('wsdl4j', '1.6.3') {
		group('wsdl4j') {
			modules = [
				'wsdl4j'
			]
		}
	}
	library('xml-maven-plugin', '1.0.2') {
		group('org.codehaus.mojo') {
			plugins = [
				'xml-maven-plugin'
			]
		}
	}
	library('xmlunit2', '2.6.3') {
		group('org.xmlunit') {
			modules = [
				'xmlunit-assertj',
				'xmlunit-core',
				'xmlunit-legacy',
				'xmlunit-matchers',
				'xmlunit-placeholders'
			]
		}
	}
}
