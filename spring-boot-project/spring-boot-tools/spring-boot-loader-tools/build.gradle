plugins {
	id 'java-library'
	id 'maven-publish'
	id 'org.springframework.boot.conventions'
	id 'org.springframework.boot.internal-publish'
}

description = 'Spring Boot Loader Tools'

def generatedResources = "${buildDir}/generated-resources/main"

configurations {
	loader
}

dependencies {
	api "org.apache.commons:commons-compress:1.19"

	compileOnly "ch.qos.logback:logback-classic"

	implementation enforcedPlatform(project(':spring-boot-project:spring-boot-dependencies'))
	implementation "org.springframework:spring-core"

	loader project(":spring-boot-project:spring-boot-tools:spring-boot-loader")

	testImplementation "org.assertj:assertj-core"
	testImplementation "org.junit.jupiter:junit-jupiter"
	testImplementation "org.mockito:mockito-core"
	testImplementation "org.zeroturnaround:zt-zip"
}

sourceSets {
	main {
		output.dir(generatedResources, builtBy: 'copyLoaderJar')
	}
}

task copyLoaderJar(type: Copy) {
	inputs.files configurations.loader
	from(configurations.loader.incoming.files.filter {it.name.startsWith "spring-boot-loader" }.singleFile) {
		rename 'spring-boot-loader-.*.jar', 'spring-boot-loader.jar'
	}
	into "${generatedResources}/META-INF/loader"
}

jar {
	dependsOn copyLoaderJar
}
